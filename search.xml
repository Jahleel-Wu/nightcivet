<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>qstyle 一步一个jio印（1）——工程目录建设 cmakelist规则</title>
      <link href="2020/10/15/qstyle-1/"/>
      <url>2020/10/15/qstyle-1/</url>
      
        <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>迷迷糊糊的去开发了关于qstyle的插件，完成后竟一脑浆糊，都不知道是什么东西。<br>这个qstyle插件主要改了各种部件的样式，从最底部改，比较全面高级。<br>有空就慢慢自己重新构建一下简单的demo，仔细看看具体qstyle插件的具体开发流程吧。</p><p>框架基于<a href="https://github.com/FedoraQt/adwaita-qt">adwaita</a>项目，后续会在上面添加点效果和样式。</p><p>当然这是后话，先踏出第一步吧。</p><p>​                                                            </p><h4 id="qtcreator的cmake工程目录结构"><a href="#qtcreator的cmake工程目录结构" class="headerlink" title="qtcreator的cmake工程目录结构"></a>qtcreator的cmake工程目录结构</h4><p>新建一个cmake的工程，里面添加目录，一个style用于开发qtyle的库，另一个demo用于随便整一个简单的app应用并用上开发出来的库测试效果。</p><p>先分别在demo和style下建立CMakeLists.txt文件，先是空的，再在上一层的CMakeLists.txt添加add_subdirectory(demo)和add_subdirectory(style)，就能在qtcreator工程看见目录结构了！</p><p>​                                                   </p><h4 id="建立demo目录内容"><a href="#建立demo目录内容" class="headerlink" title="建立demo目录内容"></a>建立demo目录内容</h4><p>在demo那里右键添加一个简单的ui类，选择widget：</p><p><img src="/2020/10/15/qstyle-1/new-ui-file.png"></p><p>会生成头文件和ui文件和cpp文件。</p><p>再把demo目录的CMakeLists.txt添加刚刚新建的内容：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;CMAKE_CURRENT_BINARY_DIR&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(demo_SRCS</span><br><span class="line">    main.cpp</span><br><span class="line">    demo.cpp</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(demo_UI</span><br><span class="line">    demo.ui</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(demo <span class="variable">$&#123;demo_SRCS&#125;</span>)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(demo Qt5::Core Qt5::Widgets)</span><br></pre></td></tr></table></figure><p>先随便拖一个button进去ui文件里吧。</p><p>main.cpp文件整一个app即可，应用style先留空：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;demo.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QApplication <span class="title">app</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    QApplication::setStyle(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    demo fact;</span><br><span class="line">    fact.show();</span><br><span class="line">    <span class="keyword">return</span> app.exec();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​                                                 </p><h4 id="建立style目录内容"><a href="#建立style目录内容" class="headerlink" title="建立style目录内容"></a>建立style目录内容</h4><p>这里先把必要的内容写下，目录下新建一个贯穿全文的类——QStylePlugin类，当然我们是他的子类styleplugin，头文件写入：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> STYLEPLUGIN_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STYLEPLUGIN_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QStylePlugin&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StylePlugin</span> :</span> <span class="keyword">public</span> QStylePlugin</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        Q_OBJECT</span><br><span class="line"></span><br><span class="line">        Q_PLUGIN_METADATA(IID <span class="string">&quot;org.qt-project.Qt.QStyleFactoryInterface&quot;</span> FILE <span class="string">&quot;mystyle.json&quot;</span> )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span>:</span><br><span class="line"></span><br><span class="line">        <span class="comment">//* constructor</span></span><br><span class="line">        <span class="function"><span class="keyword">explicit</span> <span class="title">StylePlugin</span><span class="params">(QObject *parent = <span class="number">0</span>)</span>:</span></span><br><span class="line"><span class="function">            <span class="title">QStylePlugin</span><span class="params">(parent)</span></span></span><br><span class="line"><span class="function">        </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//* destructor</span></span><br><span class="line">        ~StylePlugin();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//* returns list of valid keys</span></span><br><span class="line">        <span class="function">QStringList <span class="title">keys</span><span class="params">()</span> <span class="keyword">const</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//* create style</span></span><br><span class="line">        <span class="function">QStyle* <span class="title">create</span><span class="params">( <span class="keyword">const</span> QString&amp; )</span></span>;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// STYLEPLUGIN_H</span></span></span><br></pre></td></tr></table></figure><p>网上说这句Q_PLUGIN_METADATA(IID “org.qt-project.Qt.QStyleFactoryInterface” FILE “mystyle.json” )是十分重要的，但我不太理解这是什么东西。查资料说是创建了qt插件的符号，标识了新建的qt插件，emmmm我在暂时理解为起了个名字让以后使用提供名字符号？应该是这样？emmm先不求甚解毕竟有点迷糊。<br>如我的mystyle.json里面的内容是{ “Keys”: [ “mystyle” ] }，意思是我的style插件名字是mystyle这个。app里面setStyle()就可以填入这个名字参数了。</p><p>ok，cpp文件写入：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;styleplugin.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mystyle.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QApplication&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">QStyle* <span class="title">StylePlugin::create</span><span class="params">( <span class="keyword">const</span> QString &amp;key )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( key.toLower() == QStringLiteral( <span class="string">&quot;mystyle&quot;</span> ) )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MyStyle();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nullptr</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">StylePlugin::~StylePlugin()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QStringList <span class="title">StylePlugin::keys</span><span class="params">()</span> <span class="keyword">const</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="keyword">return</span> QStringList() &lt;&lt; QStringLiteral( <span class="string">&quot;mystyle&quot;</span> ); &#125;</span><br></pre></td></tr></table></figure><p>这里都是按照格式写一写(chao yi chao)，这个MyStyle类就是我们自己改qt部件样式的具体内容类了！</p><p>然后是mystyle.h，继承于QCommonStyle：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MYSTYLE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MYSTYLE_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;QCommonStyle&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStyle</span> :</span> <span class="keyword">public</span> QCommonStyle</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="comment">//* constructor</span></span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">MyStyle</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//* destructor</span></span><br><span class="line">    <span class="keyword">virtual</span> ~MyStyle(<span class="keyword">void</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// MYSTYLE_H</span></span></span><br></pre></td></tr></table></figure><p>先留空，再是mystyle.cpp：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;mystyle.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MyStyle::MyStyle()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyStyle::~MyStyle()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>嘿嘿。。留空留空。</p><p>添加style的cmakelists内容：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span>(myStyle_SRCS</span><br><span class="line">    styleplugin.cpp</span><br><span class="line">    mystyle.cpp</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">add_definitions(-DQT_PLUGIN)</span><br><span class="line"></span><br><span class="line">include_directories(</span><br><span class="line">    $&#123;QT_INCLUDES&#125;</span><br><span class="line">    $&#123;CMAKE_CURRENT_BINARY_DIR&#125;</span><br><span class="line">    $&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span>(LIBRARY_NAME <span class="string">&quot;mystyle-qt$&#123;QT_VERSION_NUMBER&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">add_library($&#123;LIBRARY_NAME&#125; MODULE $&#123;myStyle_SRCS&#125;)</span><br><span class="line">target_link_libraries($&#123;LIBRARY_NAME&#125; $&#123;QT_QTCORE_LIBRARY&#125; $&#123;QT_QTGUI_LIBRARY&#125; $&#123;QT_QTDBUS_LIBRARY&#125;)</span><br><span class="line">set_target_properties($&#123;LIBRARY_NAME&#125; PROPERTIES</span><br><span class="line">    LINK_FLAGS <span class="string">&quot;-Wl,--no-undefined&quot;</span></span><br><span class="line">    LIBRARY_OUTPUT_DIRECTORY <span class="string">&quot;$&#123;CMAKE_CURRENT_BINARY_DIR&#125;&quot;</span></span><br><span class="line">    OUTPUT_NAME <span class="string">&quot;mystyle&quot;</span></span><br><span class="line">    PREFIX <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">install(TARGETS $&#123;LIBRARY_NAME&#125; DESTINATION <span class="string">&quot;$&#123;QT_PLUGINS_DIR&#125;/styles&quot;</span>)</span><br></pre></td></tr></table></figure><p>这边后半部分比较重要，这个目录主要生成的是动态库，使用了一些字段设置了一下这个库，<br>add_library创建接口库，然后为这个库链接一些库，再设置一下他的属性。<br>安装目录在默认的/usr/lib64/qt5/plugin/style里。</p><p>回到项目根目录的CMakeLists.txt，可以添加一下依赖关系了：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">2.8</span>.<span class="number">11</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">project</span>(mystyle)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_INCLUDE_CURRENT_DIR <span class="keyword">ON</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_AUTOMOC <span class="keyword">ON</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_AUTOUIC <span class="keyword">ON</span>)</span><br><span class="line"><span class="keyword">add_definitions</span>(-std=c++<span class="number">11</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">find_package</span>(Qt5Core REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(Qt5Gui REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(Qt5Widgets REQUIRED)</span><br><span class="line"><span class="keyword">find_package</span>(Qt5DBus REQUIRED)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(QT_QTGUI_LIBRARY Qt5::Gui Qt5::Widgets)</span><br><span class="line"><span class="keyword">set</span>(QT_QTCORE_LIBRARY Qt5::Core)</span><br><span class="line"><span class="keyword">set</span>(QT_QTDBUS_LIBRARY Qt5::DBus)</span><br><span class="line"></span><br><span class="line"><span class="keyword">get_target_property</span>(REAL_QMAKE_EXECUTABLE <span class="variable">$&#123;Qt5Core_QMAKE_EXECUTABLE&#125;</span></span><br><span class="line">                   IMPORTED_LOCATION)</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">NOT</span> QT_PLUGINS_DIR)</span><br><span class="line">    <span class="keyword">execute_process</span>(<span class="keyword">COMMAND</span> <span class="string">&quot;$&#123;REAL_QMAKE_EXECUTABLE&#125;&quot;</span> -query QT_INSTALL_PLUGINS</span><br><span class="line">                    OUTPUT_VARIABLE QT_PLUGINS_DIR</span><br><span class="line">                    ERROR_QUIET OUTPUT_STRIP_TRAILING_WHITESPACE)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_subdirectory</span>(demo)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_subdirectory</span>(style)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中set(CMAKE_AUTOUIC ON)这一句尤为关键。新建ui类时他会包含一个ui_xxx.h头文件，这个要生成的不是自己写的，但我怎么都没有生成，就是没有开这个开关。嗨呀~</p><p>​                               </p><h4 id="基本完成！"><a href="#基本完成！" class="headerlink" title="基本完成！"></a>基本完成！</h4><p>额其实也没搞太多哈哈哈，就是先搞好层次嘛。</p><p>look at our 层次：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── CMakeLists.txt</span><br><span class="line">├── CMakeLists.txt.user</span><br><span class="line">├── demo</span><br><span class="line">│   ├── CMakeLists.txt</span><br><span class="line">│   ├── demo.cpp</span><br><span class="line">│   ├── demo.h</span><br><span class="line">│   ├── demo.ui</span><br><span class="line">│   └── main.cpp</span><br><span class="line">└── style</span><br><span class="line">    ├── CMakeLists.txt</span><br><span class="line">    ├── mystyle.cpp</span><br><span class="line">    ├── mystyle.h</span><br><span class="line">    ├── mystyle.json</span><br><span class="line">    ├── styleplugin.cpp</span><br><span class="line">    └── styleplugin.h</span><br></pre></td></tr></table></figure><p>稍微编译一下，看到构建目录的demo下有个demo程序，style目录下有个mystyle.so，就大功告成！</p><p>甚至可以运行一下那个程序：</p><p><img src="/2020/10/15/qstyle-1/demo.png"></p><p>也可以在qtcreator中项目设置里设置运行程序，点运行即可运行：</p><p><img src="/2020/10/15/qstyle-1/run-setting.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> qt </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KDE桌面 SDDM 面板 桌面 KWIN美化日志</title>
      <link href="2020/10/05/kde-apperances-opt/"/>
      <url>2020/10/05/kde-apperances-opt/</url>
      
        <content type="html"><![CDATA[<h3 id="闲置了"><a href="#闲置了" class="headerlink" title="闲置了"></a>闲置了</h3><p>这天看着旧电脑，4G的内存已经进入了被嫌弃的范畴，还带着个固态硬盘。<br>寻思算了吧，就装个linux系统折腾一下吧。</p><p>只是没想到，这一折腾就折腾了好几天。</p><p>​                            </p><p>​                                  </p><h3 id="下载安装fedora32-安装kde桌面环境"><a href="#下载安装fedora32-安装kde桌面环境" class="headerlink" title="下载安装fedora32 安装kde桌面环境"></a>下载安装fedora32 安装kde桌面环境</h3><p>直接去<a href="https://getfedora.org/en/workstation/download/">fedora官网</a>下载就行了，下了个稳定版本的32,如果精致点也可以寻找国内镜像源下载速度会快，可看官网速度也不错也就每找了。</p><p>顺便装了官网给的镜像写入工具，操作方法真的是简洁易懂，贯彻方便用户的理念呢～</p><p>常规操作Bios装起来，装完启动OK就行，换源也不需要，感觉速度还可以。</p><p>敲入命令：<br>dnf group -y install “KDE Plasma Workspaces”<br>systemctl set-default graphical.target<br>systemctl enable sddm<br>整组安装，enable sddm登录器时发生了错误，看了下是系统把gtm作为登录器了，把报错的已存在文件删掉，再运行即可；</p><p>OK装完后重启，进入sddm登录界面，在左下角选择会话 Plasma，这一刻，终于看到了心心念念的kde桌面。</p><p>​                                                     </p><p>​                                                             </p><h3 id="开始美化折腾（作死）"><a href="#开始美化折腾（作死）" class="headerlink" title="开始美化折腾（作死）"></a>开始<del>美化</del>折腾（作死）</h3><h4 id="后之后觉"><a href="#后之后觉" class="headerlink" title="后之后觉"></a>后之后觉</h4><p>折腾好久之后才发现，这东西得有顺序啊，不然浪费好多精力时间。</p><p>​                                                  </p><h4 id="改动目录"><a href="#改动目录" class="headerlink" title="改动目录"></a>改动目录</h4><p>其实也就把系统设置里或者软件中心里能修改的都该改，再者把想改的东西找找资料和办法改改。</p><ol><li>全局主题</li><li>窗口装饰</li><li>任务切换窗口</li><li>图标</li><li>SDDM</li><li>欢迎界面</li><li>面板</li><li>桌面</li><li>终端</li></ol><p>​                                                       </p><h4 id="首先应该是全局主题"><a href="#首先应该是全局主题" class="headerlink" title="首先应该是全局主题"></a>首先应该是全局主题</h4><p>打开系统设置第一个就是，最先做的应该是把这个挑个喜欢的给选好，全局主题会改系统的很多东西，在后面再把不喜欢的一个个换掉就是了。</p><p>这里额选了个mac风格的，额别问问就是没钱买原版。</p><p>用了这个主题后缺了很多图标，<del>农村人还以为是mac的特色</del>。没事后面下载一些图标包补全就好。</p><p>第一次设置的话可以把 “使用来自主题的桌面布局” 勾选上，全局主题就更全局了。第二次开始这个选项就得慎重了，它会把设置好的都覆盖调呢。（血的教训）</p><p><img src="/2020/10/05/kde-apperances-opt/all_theme.png" alt="全局主题"></p><h4 id="窗口装饰"><a href="#窗口装饰" class="headerlink" title="窗口装饰"></a>窗口装饰</h4><p>我，老窗口装饰家了。</p><p>窗口装饰是kde的窗口管理器kwin搞出来的，我连kwin源码都看过！（牛鼻轰轰）</p><p>咳～ 在系统设置应用程序风格里面可以选窗口样式，这里修改的是窗口上面那条栏的样式。</p><p>更详细点可以直接去专业的设置区域设置，在任意窗口顶栏 右键–&gt;更多动作–&gt;配置窗口管理器 便能看见：</p><p>右侧标题栏按钮还可以选择标题栏上的按钮，我就喜欢少一点，就右边三个就够了。</p><p><img src="/2020/10/05/kde-apperances-opt/window-manager.png" alt="window-manager"></p><p>当然还有进阶设置（I’m professional）</p><p>下载的窗口装饰主题包在这里：～/.local/share/aurorae/themes/，在编辑主题包里的rc配置文件，可以微调窗口样式呢。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">[jal@localhost WhiteSur]$ cat WhiteSurrc     </span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">[Layout]</span><br><span class="line">BorderLeft=1</span><br><span class="line">BorderRight=1</span><br><span class="line">BorderBottom=12</span><br><span class="line">TitleEdgeTop=4</span><br><span class="line">TitleEdgeBottom=4</span><br><span class="line">TitleEdgeLeft=16</span><br><span class="line">TitleEdgeRight=16</span><br><span class="line">TitleBorderLeft=50</span><br><span class="line">TitleBorderRight=50</span><br><span class="line">TitleHeight=16</span><br><span class="line">ButtonWidth=16</span><br><span class="line">ButtonHeight=16</span><br><span class="line">ButtonSpacing=10</span><br><span class="line">ButtonMarginTop=2</span><br><span class="line">ButtonMarginLeft=0</span><br><span class="line">ButtonMarginRight=0</span><br><span class="line">ExplicitButtonSpacer=0</span><br><span class="line">PaddingTop=35</span><br><span class="line">PaddingBottom=94</span><br><span class="line">PaddingRight=75</span><br><span class="line">PaddingLeft=75</span><br><span class="line">TitleEdgeTopMaximized=4</span><br><span class="line">TitleEdgeBottomMaximized=4</span><br><span class="line">TitleEdgeLeftMaximized=4</span><br><span class="line">TitleEdgeRightMaximized=4</span><br></pre></td></tr></table></figure><p>这里稍微得英语好一点。<br>喜欢标题栏宽一点： 把TitleHeight=16 改成 TitleHeight=25；<br>标题栏宽了按钮居中也得把它挪下一点： 把 ButtonMarginTop=2 改成 ButtonMarginTop=4;<br>其他看着办吧～调这个是真的费劲。</p><p>改之前：</p><p><img src="/2020/10/05/kde-apperances-opt/window_manager2.png" alt="window_manager2"></p><p>改之后：</p><p><img src="/2020/10/05/kde-apperances-opt/window-manager1.png" alt="window-manager1"></p><p>就还是很大变化的不是吗！</p><p>一般来说这些效果重启才生效，<del>可我是什么人</del>不过这样对调试比较不友好，可以使用qdbusviewer重载一下kwin，再重新打开窗口即可看到效果。</p><p>method是这个：</p><p><img src="/2020/10/05/kde-apperances-opt/qbud-reload.png" alt="qbud-reload"></p><h4 id="任务切换器"><a href="#任务切换器" class="headerlink" title="任务切换器"></a>任务切换器</h4><p>在 窗口装饰 选项下面有个任务切换器选项，主要场景常用于按下Alt+Tab就行窗口任务切换时弹出的窗口样式调整。</p><p>下一个搭配主要风格的在可视化那里出现，选中即可：</p><p><img src="/2020/10/05/kde-apperances-opt/window-selete.png" alt="window-selete"></p><h4 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h4><p>图标在系统设置里，选一个就好：</p><p><img src="/2020/10/05/kde-apperances-opt/icon-setting.png" alt="icon-setting"></p><h4 id="SDDM"><a href="#SDDM" class="headerlink" title="SDDM"></a>SDDM</h4><p>系统工作区–&gt;开机和关机中找到登录程序，再选一个设置就行：</p><p>sddm和窗口配置一样能通过配置修改主题样式，<del>麻烦得要死</del>不过看别人上传的很好了就懒得改了</p><p><img src="/2020/10/05/kde-apperances-opt/sddm.png" alt="sddm"></p><h4 id="欢迎界面"><a href="#欢迎界面" class="headerlink" title="欢迎界面"></a>欢迎界面</h4><p>在下方的欢迎界面选择，在登录后一段载入系统桌面时间会播放这段欢迎界面，简洁就好：</p><p><img src="/2020/10/05/kde-apperances-opt/welcome-select.png" alt="welcome-select"></p><h4 id="面板"><a href="#面板" class="headerlink" title="面板"></a>面板</h4><p>面板就是在桌面边缘那条栏目，右键编辑面板进入编辑面板模式，把喜欢的加，多余的扔掉即可。</p><p>这里设置了屏幕边缘，让它两边空出来显得立体一点？额个人喜好问题。</p><p>高度也调高了一点。</p><p>也忘了去掉了什么东西，反正觉得多余的右键去掉即可。</p><p>有一段时间发现显示已打开程序的功能没了，找了很久才知道那个部件叫任务管理器，缺了的话加回来就行了。</p><p><img src="/2020/10/05/kde-apperances-opt/panel-setting.png" alt="panel-setting"></p><p>左下角程序启动器，在全局主题中可能会安装多一些插件，这个就是装了Mac风格的。<br>先右键配置换一个图标，因为图标是一个苹果也不太好哈哈哈哈。</p><p>右键显示替代方案，选一个喜欢的风格：</p><p><img src="/2020/10/05/kde-apperances-opt/menu.png" alt="menu"></p><h4 id="桌面"><a href="#桌面" class="headerlink" title="桌面"></a>桌面</h4><p>在桌面右键配置桌面就可以配置桌面了。</p><p>首先选择一个插件，有挺多在桌面播放音视频的，算了花里胡哨。</p><p>就选了个可以为图片加点效果的，壁纸找个淡颜色的，搞起。</p><p>下面图标选项配置下放置在桌面的图标的样式规则，简洁大方即可。</p><p><img src="/2020/10/05/kde-apperances-opt/desktop-setting.png" alt="desktop-setting"></p><h4 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h4><p>终端必须占有一项！</p><p>其实也没什么，把菜单栏去掉，加入标签页，背景随机浅色，换一下字体，额也就完了：</p><p><img src="/2020/10/05/kde-apperances-opt/terminal.png" alt="terminal"></p><h4 id="桌面一览"><a href="#桌面一览" class="headerlink" title="桌面一览"></a>桌面一览</h4><p><img src="/2020/10/05/kde-apperances-opt/full-screen.png" alt="full-screen"></p><h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>桌面右键菜单太多太杂了，也没找到资料说可以怎么改，看来也只能找找文件管理器的源码改改看O不OK了。</p><p>折腾了几天。。</p><p>有什么用？</p><p>没什么，就是臭美。</p><p>​                                                        </p><a class="btn-beautify button--animated outline blue larger" href="https://blog.csdn.net/weixin_38627652" title="去我的csdn博客看看呗"><i class="far fa-hand-point-right fa-fw"></i><span>去我的csdn博客看看呗</span></a>]]></content>
      
      
      
        <tags>
            
            <tag> KDE </tag>
            
            <tag> Linux </tag>
            
            <tag> 桌面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>留余庆，庆余年</title>
      <link href="2020/10/01/Liu-Yu-Qing-reaction/"/>
      <url>2020/10/01/Liu-Yu-Qing-reaction/</url>
      
        <content type="html"><![CDATA[<h3 id="书名为庆余年"><a href="#书名为庆余年" class="headerlink" title="书名为庆余年"></a>书名为庆余年</h3><p>由于不小心看了百度百科，其实一开始对故事的主线还是比较了解的，所以时不时看到猫腻布下的坑也直接明白是怎么一回事。</p><p>​                                                                  </p><h3 id="主要故事与人物"><a href="#主要故事与人物" class="headerlink" title="主要故事与人物"></a>主要故事与人物</h3><p>其实也就是有人忘恩负义甚至恩将仇报的故事，但偏偏那个人是没有人之上的帝皇。而施恩者的周围人不甘心，不公平，转而复仇。<br>围绕了三个人物三条线，范闲，叶轻眉，皇帝。<br>猫腻说范闲是常人，有私心有恐惧有怕死，所以他并不喜欢他。其实也不是，小范大人不是一直在改变身边的人嘛，常人二字只是相比与其他人。<br>其他人都是理想主义，也像是偏执狂。萍萍偏执复仇，皇帝偏执江山，轻眉偏执天下。<br>可以说萍萍小范这条线的人似乎很有道理，也似乎没有道理。比起大江山和大人口，一条命可能没那么重要？<br>同理皇帝似乎很无情但似乎很合乎常理，这是个封建时代的皇帝，没有仇一说，皇帝眼里只有江山和权力，似乎是没错？<br>大义和个人之间，从来都没有对错。</p><p>​                                                 </p><h3 id="精妙的布局以及伏笔"><a href="#精妙的布局以及伏笔" class="headerlink" title="精妙的布局以及伏笔"></a>精妙的布局以及伏笔</h3><p>回顾此书，在京都上北齐下江南应该也只算是打怪升级的过程，殿前欢朝天子迎来结局。殿前欢并不欢愉，朝天子去亡天子，感概猫腻的布局。<br>人人都爱叶轻眉，因为人人向往自由。叶轻眉当着一个最理想的理想主义。<br>但我爱陈萍萍，这个没有太多神奇的实力靠自己一步一步的谋划把皇帝逼到绝境的地步。谍中谍局中局，甚至参合着对范闲的保护，可谓智者谋者之极致。<br>所以几乎看的时候只是快速略过武功穿越神庙枪支武器这些不太符合常理的文字，好在这在此书里本来就不多。我只想看局，此书本来就是在写局。<br>我知道，我早知道，我知道他知道。在这么多知道下人物的动作和反映，成为最喜欢这本书的主要原因。</p><p>​                                                          </p><h3 id="参照现实"><a href="#参照现实" class="headerlink" title="参照现实"></a>参照现实</h3><p>比起现实，书中更是对凡人更温柔一些，他们有与皇帝反坑的机会。也故意把皇帝写强大一些，因为本来就是如此。矛盾很足，没有对错，权谋尽致。仇该不该报，皇帝究竟对还是错，这些都深深印在脑海里。<br>就像朝天子卷中，皇帝无数无数次问自己问若若自己是不是好皇帝自己错没错，当然他只是需要别人肯定一下他，他偏执而自信。庆也能在封建中繁荣。<br>只不过仍然逃脱不了反派的事实。在多数地方都把他塑造得黑一点。<br>回顾历代帝皇，朱杀尽开国功臣，赵杯酒释兵权，在自由与民主面前，封建皇室当然很肮脏和令人愤怒。可这的确是过往存在的历史。</p><p>转念一想，若没有穿越的狙击枪，也不可能打倒自信而强大的皇帝吧。或许整个故事也只是南柯一梦呢。</p><p>​                                                     </p><h3 id="一些触动的笔记"><a href="#一些触动的笔记" class="headerlink" title="一些触动的笔记"></a>一些触动的笔记</h3><ol><li><strong>“至老方知事不协，三分在人七在天，莫愁伞下无知己，好生耍着只等闲。”</strong><br>范门四子之一科举失败却收到范来信。感概三分在人七分在天，只等闲尽是安慰，也意在等一等范闲回来。</li><li><strong>“留余庆，留余庆，忽遇恩人；幸娘亲，幸娘亲，积得阴功。劝人生，济困扶穷。休似俺那爱银钱，忘骨肉的狠舅奸兄！正是乘除加减，上有苍穹。”</strong><br>听别人说这是全本书的主旨，赶紧百度了下是什么意思。来自红楼梦，大概讲的就是要报恩。读完后回首，主旨，的确是主旨。</li><li><strong>“钓鱼台，十年不上野鸥猜。白云来往青山在，对酒开怀。欠伊周济世才，犯刘阮贪杯戒，还李杜吟诗债。酸斋笑我，我笑酸斋。晚归来，西湖山上野猿哀。二十年多少风流怪，花落花开。望云霄拜将台。袖星斗安邦策，破烟月迷魂寨。酸斋笑我，我笑酸斋。”是为殿前欢。</strong><br>当初看完殿前欢这一卷，满满的不能释怀。以长公主为首的一派大人物包括两皇子死去，阴谋逐步露出水面，的确唏嘘不已。当初第一次看到感觉悲从中来，虽然不明白写的具体意思是什么，对皇室的人来人往，死来死去，晨起朝落，血流成河同时新旧替换感到无力。曲子来自《殿前欢 次酸斋韵》，表达作者怀才不遇的心情，虽说和书有点不符，但心情还是符合的。</li></ol><p>​                                    </p><div class="note info no-icon flat"><p>特别是对酒开怀，花落花开，酸斋笑我，我笑酸斋。是为殿前欢，是为无奈。</p></div><p>​                                                    </p><a class="btn-beautify button--animated outline blue larger" href="https://www.douban.com/people/148010245/" title="去我的豆瓣看看呗"><i class="far fa-hand-point-right fa-fw"></i><span>去我的豆瓣看看呗</span></a>]]></content>
      
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>辉哥金句</title>
      <link href="2020/09/10/king-of-hui-s-words/"/>
      <url>2020/09/10/king-of-hui-s-words/</url>
      
        <content type="html"><![CDATA[<h2 id="辉哥的金句，永远的金句-（持续更新）"><a href="#辉哥的金句，永远的金句-（持续更新）" class="headerlink" title="辉哥的金句，永远的金句 （持续更新）"></a>辉哥的金句，永远的金句 （持续更新）</h2><p>​                                                  </p><div class="note blue icon modern"><i class="note-icon fas fa-bullhorn"></i><p><strong>1.如果你要问一种犯罪那么多，那一定是犯罪成本太低了。</strong></p><p><strong>2.滴人舒舒服服，使嘿努力。</strong></p><p><strong>3.富贵人家都是科技，穷人靠变异/</strong></p><p><strong>4.一件事从不同的方面看系不同评论的，一个人以不同的社会角色去看也是不一样的。</strong></p><p><strong>5.不觉得有什么事情是绝对正确的了。</strong></p><p><strong>6.你分心越多，对那件事的欲望就越不够强烈。</strong></p><p><strong>7.听个歌有嘿深度。</strong></p><p><strong>8.想死那阵点只鸡就好嗨快乐。</strong></p><p><strong>9.傻嘿只可以玩傻嘿游戏。</strong></p></div>   ]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
